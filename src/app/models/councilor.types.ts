/**
 * Sistema de Conselheiros - Tipos e Interfaces
 *
 * Conselheiros s√£o agentes promovidos que executam tarefas autom√°ticas peri√≥dicas
 * para monitorar a qualidade do projeto (similar aos advisors do SimCity)
 */

/**
 * Tipo de agendamento para tarefas de conselheiros
 */
export type ScheduleType = 'interval' | 'cron';

/**
 * Configura√ß√£o de agendamento da tarefa do conselheiro
 */
export interface CouncilorSchedule {
  /** Tipo de agendamento: interval (ex: "30m") ou cron (ex: "0 9 * * 1") */
  type: ScheduleType;

  /** Valor do agendamento: "30m", "1h", "2h" para interval | express√£o cron para cron */
  value: string;

  /** Se a tarefa est√° ativa ou pausada */
  enabled: boolean;
}

/**
 * Formato de sa√≠da esperado da tarefa
 */
export type TaskOutputFormat = 'summary' | 'detailed' | 'checklist';

/**
 * Defini√ß√£o da tarefa que o conselheiro executar√°
 */
export interface CouncilorTask {
  /** Nome descritivo da tarefa */
  name: string;

  /** Template do prompt que ser√° executado */
  prompt: string;

  /** Arquivos opcionais para incluir no contexto da execu√ß√£o */
  context_files?: string[];

  /** Formato esperado de sa√≠da */
  output_format?: TaskOutputFormat;
}

/**
 * Canais de notifica√ß√£o dispon√≠veis
 */
export type NotificationChannel = 'panel' | 'toast' | 'email';

/**
 * Configura√ß√£o de notifica√ß√µes do conselheiro
 */
export interface CouncilorNotifications {
  /** Notificar quando tarefa completar com sucesso */
  on_success: boolean;

  /** Notificar quando tarefa completar com alertas/warnings */
  on_warning: boolean;

  /** Notificar quando tarefa falhar ou encontrar erros */
  on_error: boolean;

  /** Canais onde as notifica√ß√µes ser√£o enviadas */
  channels: NotificationChannel[];
}

/**
 * Configura√ß√£o completa do conselheiro
 */
export interface CouncilorConfig {
  /** T√≠tulo/cargo do conselheiro (ex: "Conselheiro de Qualidade") */
  title: string;

  /** Agendamento da tarefa */
  schedule: CouncilorSchedule;

  /** Defini√ß√£o da tarefa a ser executada */
  task: CouncilorTask;

  /** Configura√ß√£o de notifica√ß√µes */
  notifications: CouncilorNotifications;
}

/**
 * Interface estendida do Agent para incluir funcionalidades de conselheiro
 * Estende o Agent do backend com campos adicionais
 */
export interface AgentWithCouncilor {
  /** ID MongoDB do agente */
  _id?: string;

  /** ID do agente (ex: "code_generator_agent") */
  agent_id: string;

  /** Nome do agente */
  name: string;

  /** T√≠tulo/descri√ß√£o do agente */
  title?: string;

  /** Emoji representativo */
  emoji: string;

  /** Descri√ß√£o do agente */
  description?: string;

  /** Prompt padr√£o do agente */
  prompt?: string;

  /** Modelo de IA usado */
  model?: string;

  /** Se o agente foi promovido a conselheiro */
  is_councilor: boolean;

  /** Configura√ß√£o do conselheiro (presente apenas se is_councilor = true) */
  councilor_config?: CouncilorConfig;

  /** Personaliza√ß√£o do agente (nome customizado, role, emoji) */
  customization?: {
    enabled: boolean;
    display_name?: string;  // "Silva"
    avatar_url?: string;    // URL de avatar customizado
    color?: string;         // Cor personalizada
  };

  /** Estat√≠sticas de execu√ß√£o */
  stats?: {
    total_executions: number;
    last_execution: Date;
    success_rate: number;
  };
}

/**
 * Resultado da execu√ß√£o de uma tarefa de conselheiro
 */
export interface CouncilorExecutionResult {
  /** ID da execu√ß√£o */
  execution_id: string;

  /** ID do conselheiro */
  councilor_id: string;

  /** Timestamp de in√≠cio */
  started_at: Date;

  /** Timestamp de conclus√£o */
  completed_at?: Date;

  /** Status da execu√ß√£o */
  status: 'running' | 'completed' | 'error';

  /** Severidade do resultado (determinada pela an√°lise do output) */
  severity: 'success' | 'warning' | 'error';

  /** Sa√≠da/resultado da execu√ß√£o */
  output?: string;

  /** Mensagem de erro (se houver) */
  error?: string;

  /** Dura√ß√£o em millisegundos */
  duration_ms?: number;
}

/**
 * Relat√≥rio hist√≥rico de execu√ß√µes de um conselheiro
 */
export interface CouncilorReport {
  /** ID do conselheiro */
  councilor_id: string;

  /** Nome do conselheiro */
  councilor_name: string;

  /** √öltimas execu√ß√µes (m√°ximo 10) */
  recent_executions: CouncilorExecutionResult[];

  /** Total de execu√ß√µes realizadas */
  total_executions: number;

  /** Taxa de sucesso (0-100) */
  success_rate: number;

  /** Pr√≥xima execu√ß√£o agendada */
  next_execution?: Date;
}

/**
 * Payload para promover um agente a conselheiro
 */
export interface PromoteToCouncilorRequest {
  /** Configura√ß√£o do conselheiro */
  councilor_config: CouncilorConfig;

  /** Personaliza√ß√£o opcional */
  customization?: {
    display_name?: string;
    avatar_url?: string;
    color?: string;
  };
}

/**
 * Presets de agentes investigadores dispon√≠veis
 */
export interface InvestigatorPreset {
  /** ID √∫nico do preset */
  id: string;

  /** Nome do investigador */
  name: string;

  /** Emoji */
  emoji: string;

  /** Descri√ß√£o do que o investigador faz */
  description: string;

  /** Template base do prompt */
  prompt_template: string;
}

/**
 * Presets padr√£o de investigadores
 */
export const INVESTIGATOR_PRESETS: InvestigatorPreset[] = [
  {
    id: 'code-quality-analyst',
    name: 'Analista de Qualidade de C√≥digo',
    emoji: 'üîç',
    description: 'Analisa complexidade, code smells e padr√µes de c√≥digo',
    prompt_template: `Voc√™ √© um Analista de Qualidade de C√≥digo especializado.

Contexto do evento: {{event_context}}

Analise o c√≥digo relacionado e identifique:
- Complexidade ciclom√°tica elevada
- Code smells (duplica√ß√£o, long methods, etc)
- Viola√ß√µes de princ√≠pios SOLID
- Oportunidades de refatora√ß√£o

{{additional_context}}

Retorne um relat√≥rio estruturado com prioridades (alta/m√©dia/baixa).`
  },
  {
    id: 'performance-investigator',
    name: 'Investigador de Performance',
    emoji: '‚ö°',
    description: 'Analisa lat√™ncia, bottlenecks e otimiza√ß√µes',
    prompt_template: `Voc√™ √© um Investigador de Performance especializado.

Contexto do evento: {{event_context}}

Investigue problemas de performance:
- An√°lise de lat√™ncia e tempo de resposta
- Identifica√ß√£o de bottlenecks
- Queries N+1 e problemas de database
- Uso excessivo de mem√≥ria ou CPU

{{additional_context}}

Retorne sugest√µes de otimiza√ß√£o priorizadas.`
  },
  {
    id: 'security-auditor',
    name: 'Auditor de Seguran√ßa',
    emoji: 'üîí',
    description: 'Analisa vulnerabilidades e riscos de seguran√ßa',
    prompt_template: `Voc√™ √© um Auditor de Seguran√ßa especializado.

Contexto do evento: {{event_context}}

Realize uma auditoria de seguran√ßa:
- Vulnerabilidades conhecidas (CVEs)
- Pr√°ticas inseguras no c√≥digo
- Exposi√ß√£o de dados sens√≠veis
- Configura√ß√µes de seguran√ßa inadequadas

{{additional_context}}

Retorne relat√≥rio com severidade (cr√≠tica/alta/m√©dia/baixa).`
  },
  {
    id: 'architecture-reviewer',
    name: 'Revisor de Arquitetura',
    emoji: 'üèóÔ∏è',
    description: 'Analisa acoplamento, coes√£o e design patterns',
    prompt_template: `Voc√™ √© um Revisor de Arquitetura especializado.

Contexto do evento: {{event_context}}

Analise a arquitetura do c√≥digo:
- Acoplamento entre m√≥dulos
- Coes√£o dentro de componentes
- Uso adequado de design patterns
- Separa√ß√£o de responsabilidades

{{additional_context}}

Retorne sugest√µes de melhoria arquitetural.`
  }
];

/**
 * Exemplos de tarefas pr√©-configuradas para conselheiros
 */
export const COUNCILOR_TASK_TEMPLATES = {
  CHECK_MONOLITHIC_FILES: {
    name: 'Verificar Arquivos Monol√≠ticos',
    prompt: `Analise todos os arquivos .ts do projeto.
Identifique arquivos com mais de 500 linhas.

Para cada arquivo grande, retorne:
- Nome do arquivo e n√∫mero de linhas
- Responsabilidades identificadas
- Sugest√£o de modulariza√ß√£o
- Prioridade (alta/m√©dia/baixa)

Formato: Lista ordenada por prioridade.`,
    output_format: 'checklist' as TaskOutputFormat
  },

  CHECK_TEST_COVERAGE: {
    name: 'Verificar Cobertura de Testes',
    prompt: `Execute an√°lise de cobertura de testes.

Identifique:
- Arquivos sem testes (0% cobertura)
- Arquivos com cobertura < 50%
- Fun√ß√µes cr√≠ticas sem teste
- Arquivos mais usados sem cobertura adequada

Priorize por impacto (arquivos mais usados primeiro).
Retorne lista com a√ß√µes sugeridas.`,
    output_format: 'checklist' as TaskOutputFormat
  },

  CHECK_DEPENDENCIES: {
    name: 'Verificar Depend√™ncias Vulner√°veis',
    prompt: `Execute npm audit ou an√°lise de depend√™ncias.

Liste vulnerabilidades encontradas:
- Severidade (cr√≠tica/alta/m√©dia/baixa)
- Pacote afetado
- Vers√£o atual vs recomendada
- CVE se dispon√≠vel

Priorize vulnerabilidades cr√≠ticas e de alta severidade.`,
    output_format: 'detailed' as TaskOutputFormat
  },

  CHECK_INLINE_CSS: {
    name: 'Verificar CSS Inline',
    prompt: `Busque por CSS inline em arquivos .html e .ts:
- style="" em templates HTML
- Propriedades style no TypeScript
- Estilos hardcoded em componentes

Para cada ocorr√™ncia:
- Arquivo e linha
- C√≥digo encontrado
- Sugest√£o de classe CSS alternativa

Retorne lista priorizada por impacto visual.`,
    output_format: 'checklist' as TaskOutputFormat
  },

  CHECK_PERFORMANCE: {
    name: 'Verificar Performance de APIs',
    prompt: `Analise m√©tricas de performance das APIs:
- Endpoints com P95 > 1000ms
- Endpoints com taxa de erro > 1%
- Queries lentas no banco de dados
- Uso excessivo de recursos

Para cada problema:
- Endpoint afetado
- M√©trica atual
- Poss√≠vel causa
- Sugest√£o de otimiza√ß√£o

Retorne lista ordenada por impacto.`,
    output_format: 'detailed' as TaskOutputFormat
  }
};
